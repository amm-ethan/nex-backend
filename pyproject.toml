[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "NEX-Backend"
version = "1.0.0"
description = "Backend Project for NEX"
readme = "README.md"
requires-python = ">=3.10"
authors = [{ name = "Aung Myint Myat", email = "aungmyintmyat.ethan@gmail.com" }]
dependencies = [
    # Core Framework
    "fastapi>=0.115.12",
    "uvicorn[standard]>=0.34.0",
    # Data Validation & Settings
    "pydantic>=2.11.3",
    "pydantic-settings>=2.8.1",
    "python-dotenv>=1.1.0",
    # Others
    "pandas>= 2.3.2",
    "numba>= 0.61.2",
    "numpy>=2.2.6",
    # AI
    "langchain_community>=0.3.29",
    "langchain_openai>=0.3.32"
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=8.0.2",
    "pytest-asyncio>=0.23.7",
    "pytest-mock>=3.14.1",
    "pytest-cov>=5.0.0",
    "coverage==7.4.3",
    # Http
    "httpx>=0.27.0",
    # Formating
    "black>=24.2.0",
    "ruff>=0.3.0",
    # Code Format
    "mypy>=1.15",
    "types-passlib>=1.7.7.20250408",
    "pandas-stubs>=2.2.3.250308"
]

[tool.setuptools]
package-dir = { "" = "app" }

[tool.setuptools.packages.find]
where = ["app"]

[tool.mypy]
strict = true
exclude = ["venv", ".venv"]
ignore_missing_imports = true
disable_error_code = ["misc", "unused-ignore", "no-any-return", "import-untyped"]

[tool.ruff]
target-version = "py312"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "W191", # indentation contains tabs
    "B904", # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403", "I001"]
"tests/*" = ["ARG001"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
pythonpath = "app"
addopts = "--cov --cov-report term-missing"
log_level = "WARNING"

[tool.coverage.report]
omit = [
    "tests/*", "alembic/*"
]
exclude_also = ["pragma: no cover", "if TYPE_CHECKING:"]
fail_under = 80
